const fetch = require("node-fetch");
const register = async (username, password) => {
	try {
		const res = await fetch("http://localhost:8080/users/register", {
			method: "POST",
			headers: {
				"content-type": "application/json",
				accept: "application/json"
			},
			body: JSON.stringify({
				username,
				password
			})
		});
		return res.json();
	} catch (e) {
		throw new Error(e);
	}
};

const login = async () => {
	try {
		const res = await fetch("http://localhost:8080/users/authenticate", {
			method: "POST",
			headers: {
				"content-type": "application/json",
				accept: "application/json"
			},
			body: JSON.stringify({
				username: "user",
				password: "12345"
			})
		});
		return res.json();
	} catch (e) {
		throw new Error(e);
	}
};

const sendRide = async (token, ride) => {
	console.log(ride);
	const res = await fetch("http://localhost:8080/rides/create", {
		method: "POST",
		headers: {
			"content-type": "application/json",
			accept: "application/json",
			authorization: `Bearer ${token}`
		},
		body: JSON.stringify(ride)
	});
	return res.json();
};
const route1 = {
	coordinates: [
		[-21.9468, 64.139981],
		[-21.945904, 64.140731],
		[-21.945879, 64.140752],
		[-21.945806, 64.140809],
		[-21.945386, 64.141166],
		[-21.945317, 64.141218],
		[-21.942341, 64.139653],
		[-21.940618, 64.138849],
		[-21.940081, 64.138612],
		[-21.939952, 64.138561],
		[-21.939768, 64.138484],
		[-21.939468, 64.138353],
		[-21.936713, 64.137172],
		[-21.935108, 64.136599],
		[-21.934557, 64.136438],
		[-21.933639, 64.136226],
		[-21.933557, 64.136207],
		[-21.933327, 64.136157],
		[-21.933106, 64.136114],
		[-21.932327, 64.135989],
		[-21.931766, 64.135911],
		[-21.930632, 64.135786],
		[-21.92949, 64.135733],
		[-21.928331, 64.135722],
		[-21.92664, 64.135756],
		[-21.923889, 64.135851],
		[-21.923469, 64.135869],
		[-21.922737, 64.135909],
		[-21.921994, 64.135983],
		[-21.920564, 64.136187],
		[-21.920071, 64.136228],
		[-21.919415, 64.136231],
		[-21.918433, 64.136144],
		[-21.9168, 64.135937],
		[-21.914764, 64.135666],
		[-21.912156, 64.135271],
		[-21.911732, 64.135199],
		[-21.911265, 64.135104],
		[-21.910978, 64.135044],
		[-21.910707, 64.134993],
		[-21.910624, 64.134977],
		[-21.910463, 64.134947],
		[-21.910256, 64.134913],
		[-21.909899, 64.134858],
		[-21.906661, 64.134374],
		[-21.906519, 64.134353],
		[-21.906103, 64.13429],
		[-21.905479, 64.134195],
		[-21.903661, 64.133878],
		[-21.903148, 64.133787],
		[-21.902829, 64.133731],
		[-21.901285, 64.133472],
		[-21.900787, 64.1334],
		[-21.899065, 64.133143],
		[-21.89863, 64.133085],
		[-21.898563, 64.133074],
		[-21.898347, 64.133042],
		[-21.897998, 64.132988],
		[-21.897648, 64.132934],
		[-21.897083, 64.132844],
		[-21.896997, 64.13283],
		[-21.895006, 64.13254],
		[-21.894544, 64.132469],
		[-21.893502, 64.132309],
		[-21.892846, 64.132208],
		[-21.890442, 64.131838],
		[-21.885542, 64.131094],
		[-21.885087, 64.131025],
		[-21.884176, 64.130886],
		[-21.883997, 64.130858],
		[-21.883725, 64.130818],
		[-21.883408, 64.130766],
		[-21.882883, 64.130679],
		[-21.879959, 64.130195],
		[-21.876835, 64.129657],
		[-21.875929, 64.129501],
		[-21.875898, 64.129495],
		[-21.875709, 64.129463],
		[-21.875464, 64.129421],
		[-21.875154, 64.129367],
		[-21.874476, 64.129249],
		[-21.871998, 64.128863],
		[-21.87126, 64.12874],
		[-21.870368, 64.128591],
		[-21.869754, 64.128486],
		[-21.867485, 64.1281],
		[-21.86341, 64.127409],
		[-21.862296, 64.127224],
		[-21.858374, 64.126555],
		[-21.856961, 64.126313],
		[-21.856812, 64.126288],
		[-21.853328, 64.125691],
		[-21.849055, 64.124988],
		[-21.847927, 64.124829],
		[-21.846213, 64.124604],
		[-21.842966, 64.124266],
		[-21.842018, 64.124178],
		[-21.841641, 64.124148],
		[-21.840162, 64.124034],
		[-21.838416, 64.123942],
		[-21.835795, 64.123837],
		[-21.834097, 64.1238],
		[-21.832491, 64.123781],
		[-21.828763, 64.123828],
		[-21.824089, 64.123881],
		[-21.823152, 64.123911],
		[-21.822968, 64.123914],
		[-21.820372, 64.123946],
		[-21.819049, 64.123962],
		[-21.816638, 64.123983],
		[-21.813749, 64.124034],
		[-21.812266, 64.12407],
		[-21.811802, 64.124081],
		[-21.811402, 64.124084],
		[-21.810477, 64.124088],
		[-21.806305, 64.124124],
		[-21.800374, 64.124206],
		[-21.797596, 64.124241],
		[-21.797378, 64.124244],
		[-21.796622, 64.124254],
		[-21.795921, 64.124264],
		[-21.79503, 64.124278],
		[-21.790916, 64.124371],
		[-21.789196, 64.124465],
		[-21.787842, 64.12458],
		[-21.786602, 64.124704],
		[-21.784486, 64.125001],
		[-21.783487, 64.125179],
		[-21.780965, 64.125723],
		[-21.779696, 64.126062],
		[-21.777426, 64.126785],
		[-21.767882, 64.130442],
		[-21.766502, 64.131017],
		[-21.765491, 64.131512],
		[-21.764495, 64.132048],
		[-21.763863, 64.132445],
		[-21.763222, 64.132892],
		[-21.762652, 64.133334],
		[-21.762135, 64.133783],
		[-21.761905, 64.134017],
		[-21.760796, 64.135152],
		[-21.7605, 64.135466],
		[-21.760368, 64.13563],
		[-21.759974, 64.136124],
		[-21.759666, 64.136488],
		[-21.759181, 64.137164],
		[-21.758753, 64.13785],
		[-21.75853, 64.138333],
		[-21.758348, 64.138629],
		[-21.758282, 64.138767],
		[-21.758155, 64.138775],
		[-21.758036, 64.138796],
		[-21.757932, 64.13883],
		[-21.757845, 64.138877],
		[-21.757769, 64.138994],
		[-21.757787, 64.139054],
		[-21.757813, 64.139086],
		[-21.757848, 64.139116],
		[-21.757759, 64.139411],
		[-21.757493, 64.140014],
		[-21.757263, 64.140443],
		[-21.756739, 64.14121],
		[-21.755981, 64.142115],
		[-21.755219, 64.14285],
		[-21.754555, 64.143418],
		[-21.753942, 64.143903],
		[-21.752545, 64.144831],
		[-21.751826, 64.145228],
		[-21.749937, 64.146199],
		[-21.746726, 64.147632],
		[-21.745607, 64.148175],
		[-21.743805, 64.14916],
		[-21.742114, 64.150184],
		[-21.738408, 64.15256],
		[-21.737871, 64.152998],
		[-21.737727, 64.153187],
		[-21.737632, 64.153256],
		[-21.737431, 64.15334],
		[-21.737302, 64.153377],
		[-21.7372, 64.153399],
		[-21.737114, 64.153426],
		[-21.737019, 64.153466],
		[-21.736952, 64.153531],
		[-21.736882, 64.153588],
		[-21.736745, 64.153688],
		[-21.735393, 64.154413],
		[-21.734311, 64.154968],
		[-21.732972, 64.155601],
		[-21.730532, 64.15659],
		[-21.728854, 64.157195],
		[-21.726847, 64.157955],
		[-21.725377, 64.158476],
		[-21.725012, 64.158536],
		[-21.724873, 64.158519],
		[-21.724771, 64.158516],
		[-21.724669, 64.158522],
		[-21.724491, 64.158553],
		[-21.7243, 64.158641],
		[-21.724237, 64.158718],
		[-21.724228, 64.158766],
		[-21.724241, 64.158813],
		[-21.724308, 64.158887],
		[-21.7244, 64.158937],
		[-21.724551, 64.158983],
		[-21.724663, 64.159],
		[-21.724754, 64.159007],
		[-21.725263, 64.159268],
		[-21.725911, 64.159617],
		[-21.726451, 64.159913],
		[-21.726794, 64.160184],
		[-21.727137, 64.16048],
		[-21.727289, 64.16061],
		[-21.72752, 64.160896],
		[-21.727897, 64.161625],
		[-21.728038, 64.162008],
		[-21.727987, 64.162257],
		[-21.727836, 64.162405],
		[-21.727768, 64.16245],
		[-21.727742, 64.162503],
		[-21.72777, 64.162569],
		[-21.727829, 64.162613],
		[-21.727886, 64.16264],
		[-21.727971, 64.162747],
		[-21.728075, 64.162915],
		[-21.728069, 64.163002],
		[-21.728044, 64.163268],
		[-21.727975, 64.163503],
		[-21.727864, 64.163822],
		[-21.727751, 64.16404],
		[-21.727557, 64.164342],
		[-21.727265, 64.16457],
		[-21.727179, 64.164638],
		[-21.727078, 64.164649],
		[-21.726986, 64.164679],
		[-21.726909, 64.16474],
		[-21.726706, 64.164733],
		[-21.725353, 64.164518],
		[-21.724801, 64.164921]
	],
	type: "LineString"
};

const route2 = {
	coordinates: [
		[-21.948916, 64.138893],
		[-21.949097, 64.138734],
		[-21.948773, 64.138661],
		[-21.948519, 64.138604],
		[-21.948497, 64.138597],
		[-21.948444, 64.13858],
		[-21.947938, 64.139013],
		[-21.947799, 64.139136],
		[-21.946843, 64.139944],
		[-21.945904, 64.140731],
		[-21.945879, 64.140752],
		[-21.945806, 64.140809],
		[-21.945386, 64.141166],
		[-21.945317, 64.141218],
		[-21.942341, 64.139653],
		[-21.940618, 64.138849],
		[-21.940081, 64.138612],
		[-21.939952, 64.138561],
		[-21.939695, 64.138669],
		[-21.939149, 64.138897],
		[-21.938828, 64.139041],
		[-21.938487, 64.13923],
		[-21.938097, 64.139447],
		[-21.937988, 64.139507],
		[-21.937941, 64.139499],
		[-21.937894, 64.139495],
		[-21.93785, 64.139494],
		[-21.937712, 64.139516],
		[-21.937662, 64.139538],
		[-21.937619, 64.139575],
		[-21.937612, 64.139624],
		[-21.937629, 64.13965],
		[-21.937463, 64.139718],
		[-21.937065, 64.139884],
		[-21.936618, 64.140076],
		[-21.935654, 64.140481],
		[-21.935562, 64.14052],
		[-21.935404, 64.140587],
		[-21.934695, 64.140886],
		[-21.934624, 64.140916],
		[-21.934402, 64.140969],
		[-21.933665, 64.141145],
		[-21.933306, 64.141232],
		[-21.932943, 64.141318],
		[-21.932829, 64.141345],
		[-21.931698, 64.141626],
		[-21.930498, 64.141924],
		[-21.930334, 64.141964],
		[-21.930205, 64.141997],
		[-21.929374, 64.142207],
		[-21.929317, 64.142221],
		[-21.929199, 64.142245],
		[-21.928917, 64.142277],
		[-21.928733, 64.142271],
		[-21.928468, 64.142252],
		[-21.928333, 64.142243],
		[-21.928254, 64.142334],
		[-21.928083, 64.142444],
		[-21.927911, 64.142524],
		[-21.927757, 64.142577],
		[-21.927537, 64.142634],
		[-21.927462, 64.142654],
		[-21.927225, 64.142722],
		[-21.927094, 64.142798],
		[-21.927065, 64.142827],
		[-21.927014, 64.142878],
		[-21.926626, 64.143268],
		[-21.926614, 64.14328],
		[-21.926574, 64.143321],
		[-21.926461, 64.143298],
		[-21.926437, 64.143293],
		[-21.923528, 64.142687],
		[-21.923413, 64.142662],
		[-21.923337, 64.142646],
		[-21.920878, 64.142129],
		[-21.920718, 64.142095],
		[-21.920074, 64.141965],
		[-21.919302, 64.14181],
		[-21.91935, 64.141764],
		[-21.919672, 64.141455]
	],
	type: "LineString"
};

const createRide = (time, idx) => {
	const day = new Date();
	return {
		departureTime: `${day.getFullYear()}-${day.getMonth()}-${day.getDate()} ${time}:00:00`,
		destination: { type: "Point", coordinates: [-21.726796, 64.167093] },
		distance: 14235.1,
		duration: 1280.9,
		driverId: 1,
		origin: { type: "Point", coordinates: [-21.948939, 64.138898] },
		route: idx % 2 === 0 ? route1 : route2,
		seats: "5"
	};
};

const times = [
	"00",
	"02",
	"04",
	"06",
	"08",
	"10",
	"12",
	"14",
	"16",
	"18",
	"20",
	"22"
];

const rides = times.map((time, idx) => createRide(time, idx));

const recurse = (token, idx) =>
	sendRide(token, rides[idx])
		.then(res => {
			if (idx < rides.length - 1) recurse(token, idx + 1);
		})
		.catch(e => e);

const run = async () => {
	try {
		await register("gunnar", "12345");
		await register("ekkigunnar", "12345");
		await register("jon", "12345");
		await register("ekkijon", "12345");
		const reg = await register("user", "12345");
		const { token } = await login();

		recurse(token, 0);
	} catch (e) {
		console.error(e);
	}
};

module.exports = {
	run
};
